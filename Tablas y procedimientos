CREATE TABLE profesores (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nombre VARCHAR(100),
    apellido VARCHAR(100),
    materia VARCHAR(100),
    dni INT,
    edad INT,
    dias_trabajo VARCHAR(100)
);



CREATE TABLE profesores (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nombre VARCHAR(100),
    apellido VARCHAR(100),
    materia VARCHAR(100),
    dni INT,
    edad INT,
    dias_trabajo VARCHAR(100)
)


DELIMITER //

CREATE PROCEDURE EditarEstudiante(
    IN id_estud INT,
    IN nuevo_nombre VARCHAR(100),
    IN nuevo_apellido VARCHAR(100),
    IN nuevo_legajo INT,
    IN nuevo_dni INT,
    IN nueva_edad INT,
    IN nueva_cant_materias INT,
    IN nuevo_prof_fav VARCHAR(100)
)
BEGIN
    UPDATE estudiantes 
    SET nombre = nuevo_nombre, 
        apellido = nuevo_apellido,
        legajo = nuevo_legajo,
        dni = nuevo_dni,
        edad = nueva_edad,
        cantidad_de_materias_inscripto = nueva_cant_materias,
        profesor_fav = nuevo_prof_fav
    WHERE id = id_estud;
END //

DELIMITER ;


DELIMITER //

CREATE PROCEDURE EditarProfesor(
    IN nuevo_nombre VARCHAR(100),
    IN nuevo_apellido VARCHAR(100),
    IN nueva_materia VARCHAR(100),
    IN nuevo_dni INT,
    IN nueva_edad INT,
    IN nuevos_dias VARCHAR(100),
    IN nombre_prof VARCHAR(100)
)
BEGIN
    UPDATE profesores
    SET nombre = nuevo_nombre,
        apellido = nuevo_apellido,
        materia = nueva_materia,
        dni = nuevo_dni,
        edad = nueva_edad,
        dias_trabajo = nuevos_dias
    WHERE nombre = nombre_prof;
END //

DELIMITER ;


ELIMITER //

CREATE PROCEDURE ObtenerAlumnosPorLetra(IN letra_busqueda CHAR)
BEGIN
    SELECT * FROM estudiantes WHERE nombre LIKE CONCAT(letra_busqueda, '%');
END //

DELIMITER ;


DELIMITER //

CREATE PROCEDURE ObtenerAlumnosMayoresDeEdad()
BEGIN
    SELECT * FROM estudiantes WHERE edad >= 18;
END //

DELIMITER ;






